{"version":3,"sources":["components/ContactList/ContactList.js","components/Filter/Filter.js","components/Form/Form.js","App.js","index.js"],"names":["ContactList","contacts","onDeleteContacts","map","id","name","number","type","onClick","Filter","value","onChange","Form","state","handleChange","e","target","setState","handlSubmit","preventDefault","props","onSubmit","this","pattern","title","required","Component","App","filter","addContact","newContact","uuidv4","contact","includes","alert","prevState","deleteContact","filterContacts","getVisibleContacts","normalizedFilter","toLowerCase","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a1fd283.chunk.js","sourcesContent":["const ContactList = ({ contacts, onDeleteContacts}) => {\r\n      return (\r\n        <ul>{\r\n          contacts.map(({ id, name, number }) => (\r\n            <li key={id}>\r\n              <p>{name}: {number}</p>\r\n              <button type=\"button\" onClick={() => { onDeleteContacts(id) }}>Delete</button>\r\n            </li>\r\n          ))\r\n        }</ul>\r\n      );\r\n};\r\nexport default ContactList;","const Filter = ({ value, onChange }) => {\r\n    return (\r\n            <label>\r\n                Find contacts by name\r\n                <input type=\"text\" value={value} onChange={onChange} />\r\n            </label>\r\n    );\r\n};\r\n\r\nexport default Filter;","import { Component } from 'react'\r\n\r\nexport default class Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({ [name]: value })\r\n  };\r\n    \r\n  handlSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n\r\n    this.setState({\r\n      name: '',\r\n      number: ''\r\n    });\r\n  };\r\n    \r\n\r\n    render() {\r\n      return (\r\n        <form onSubmit={this.handlSubmit}>\r\n          <label>\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n            />\r\n          </label>\r\n          <label>\r\n            Number\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={this.state.number}\r\n              onChange={this.handleChange}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n            />\r\n          </label>\r\n          <button type='submit'>Add contact</button>\r\n        </form>\r\n      );\r\n  };\r\n};\r\n","import { Component } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport Form from \"./components/Form/Form\";\nimport './App.css'\n\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: ''\n  };\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts })\n    }\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n    }\n  };\n\n  addContact = ({ name, number}) => {\n    const newContact = {\n      id: uuidv4(),\n      name: name,\n      number: number\n    }\n    const searchName = this.state.contacts.map(contact => contact.name).includes(name);\n    \n    if (searchName) {\n      alert(`${name} is already in contacts`)\n      return\n    }\n\n    this.setState(prevState => (\n      {contacts: [newContact, ...prevState.contacts]}))\n  };\n\n  deleteContact = id => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== id)\n    }))\n  };\n\n  filterContacts = (e) => {\n    this.setState({\n      filter: e.target.value\n    })\n  };\n\n  getVisibleContacts = () => {\n    const normalizedFilter = this.state.filter.toLowerCase();\n    return this.state.contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter))\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <Form onSubmit={this.addContact}/>\n        <h2>Contacts</h2>\n        <Filter value={this.state.filter} onChange={this.filterContacts}/>\n        <ContactList contacts={this.getVisibleContacts()} onDeleteContacts={this.deleteContact} />\n      </div>\n    );\n  }\n \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}